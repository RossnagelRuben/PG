// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Sistema_De_Gestion.Models
{
    public partial class EstudioJuridicoContext : DbContext
    {
        public EstudioJuridicoContext()
        {
        }

        public EstudioJuridicoContext(DbContextOptions<EstudioJuridicoContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TableAccione> TableAcciones { get; set; }
        public virtual DbSet<TableCliente> TableClientes { get; set; }
        public virtual DbSet<TableCorreo> TableCorreos { get; set; }
        public virtual DbSet<TableLog> TableLogs { get; set; }
        public virtual DbSet<TablePermiso> TablePermisos { get; set; }
        public virtual DbSet<TableRelacionClienteTramite> TableRelacionClienteTramites { get; set; }
        public virtual DbSet<TableRole> TableRoles { get; set; }
        public virtual DbSet<TableSubTramite> TableSubTramites { get; set; }
        public virtual DbSet<TableTelefono> TableTelefonos { get; set; }
        public virtual DbSet<TableTipoTramite> TableTipoTramites { get; set; }
        public virtual DbSet<TableUsuario> TableUsuarios { get; set; }
        public virtual DbSet<TableVentana> TableVentanas { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TableAccione>(entity =>
            {
                entity.HasOne(d => d.IdVentanaNavigation)
                    .WithMany(p => p.TableAcciones)
                    .HasForeignKey(d => d.IdVentana)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Acciones_Table_Ventanas");
            });

            modelBuilder.Entity<TableCorreo>(entity =>
            {
                entity.HasOne(d => d.IdClienteNavigation)
                    .WithMany(p => p.TableCorreos)
                    .HasForeignKey(d => d.IdCliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Correos_Table_Clientes");
            });

            modelBuilder.Entity<TablePermiso>(entity =>
            {
                entity.HasOne(d => d.IdAccionNavigation)
                    .WithMany(p => p.TablePermisos)
                    .HasForeignKey(d => d.IdAccion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Permisos_Table_Acciones");

                entity.HasOne(d => d.IdRolNavigation)
                    .WithMany(p => p.TablePermisos)
                    .HasForeignKey(d => d.IdRol)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Permisos_Table_Roles");
            });

            modelBuilder.Entity<TableRelacionClienteTramite>(entity =>
            {
                entity.HasOne(d => d.IdClienteNavigation)
                    .WithMany(p => p.TableRelacionClienteTramites)
                    .HasForeignKey(d => d.IdCliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Relacion_Cliente_Tramites_Table_Clientes");

                entity.HasOne(d => d.IdsubTramiteNavigation)
                    .WithMany(p => p.TableRelacionClienteTramites)
                    .HasForeignKey(d => d.IdsubTramite)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Relacion_Cliente_Tramites_Table_Sub_Tramites");
            });

            modelBuilder.Entity<TableRole>(entity =>
            {
                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.TableRoles)
                    .HasForeignKey(d => d.IdUsuario)
                    .HasConstraintName("FK_Table_Roles_Table_Usuarios");
            });

            modelBuilder.Entity<TableSubTramite>(entity =>
            {
                entity.HasKey(e => e.IdsubTramite)
                    .HasName("PK_Table_Sub_Tramites");

                entity.HasOne(d => d.IdtramiteNavigation)
                    .WithMany(p => p.TableSubTramites)
                    .HasForeignKey(d => d.Idtramite)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Sub_Tramites_Table_Tipo_Tramites");
            });

            modelBuilder.Entity<TableTelefono>(entity =>
            {
                entity.HasOne(d => d.IdClienteNavigation)
                    .WithMany(p => p.TableTelefonos)
                    .HasForeignKey(d => d.IdCliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Telefonos_Table_Clientes");
            });

            modelBuilder.Entity<TableTipoTramite>(entity =>
            {
                entity.HasKey(e => e.Idtramite)
                    .HasName("PK_Table_Tipo_Tramites");
            });

            modelBuilder.Entity<TableUsuario>(entity =>
            {
                entity.HasOne(d => d.IdCorreoNavigation)
                    .WithMany(p => p.TableUsuarios)
                    .HasForeignKey(d => d.IdCorreo)
                    .HasConstraintName("FK_Table_Usuarios_Table_Correos");

                entity.HasOne(d => d.IdRolNavigation)
                    .WithMany(p => p.TableUsuarios)
                    .HasForeignKey(d => d.IdRol)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Table_Usuarios_Table_Roles");

                entity.HasOne(d => d.IdTelefonoNavigation)
                    .WithMany(p => p.TableUsuarios)
                    .HasForeignKey(d => d.IdTelefono)
                    .HasConstraintName("FK_Table_Usuarios_Table_Telefonos");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}