@model TableRelacionClienteTramite
@{
    List<TableSubTramite> listaTramites = null;
    if (ViewData.ContainsKey("Tramites"))
    {
        listaTramites = (List<TableSubTramite>)ViewData["Tramites"];
    }
}
<h4>Editando Tramite del Cliente: @ViewData["nombre"]</h4>
<br />
<div>
    <div>
        <form asp-action="Editar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input hidden="hidden" name="idrelacion" value="@Model.Idrelacion" />
            <input hidden="hidden" name="idcliente" value="@ViewData["idcliente"]" />
            <input hidden="hidden" name="nombre" value="@ViewData["nombre"]" />
            <div class="form-group">
                <label class="control-label">Descripcion del Tramite asociado:</label>
                <input asp-for="Descripcion" class="form-control" />
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdsubTramite" class="control-label">Tramite a asociar:</label>
                <select asp-for="IdsubTramite" class="form-control" asp-items="ViewBag.Idtramite">
                    @{
                        if (listaTramites != null && listaTramites.Count > 0)
                        {
                            for (int i = 0; i < listaTramites.Count(); i++)
                            {
                                var tramite = listaTramites[i];
                                <option value="@tramite.IdsubTramite">@tramite.TituloSubTramite</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Estado" class="control-label">Estado:</label>
                <input asp-for="Estado" class="form-control" />
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Habilitado" /> @Html.DisplayNameFor(model => model.Habilitado)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar Cambios Cliente <-> Tramite" class="btn btn-primary" /> |
                <a asp-action="Index" asp-route-id="@Model.IdCliente" class="btn btn-secondary">Volver</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}